% Built in Functions
var1 = 100;
sin(var1);
cos(var1);
tan(var1);
cot(var1);
log(var1);       % natural log
log10(var1);     % log to the base 10
exp(var1);       % euler's number to the power var1
abs(var1);       % absolute value
int2str(var1);   % convert integer value to string(/char array); will ignore decimal values
num2str(var1)    % convert numerical value to string(/char array); will include decimal values

x = 3;
y = 5;
zeros(x, y);     % optional parameters; geneeates x,y array of all 0s
ones(x, y);      % optional parameters; geneeates x,y array of all 1s
eye(x, y);       % optional parameters; generates x,y array with \ diagonal values of 1 and rest as 0


% random generators
rand(x, y);      % optional parameters; generates x,y array with random numbers between 0 and 1
randn(x, y);     % optional parameters; generates x,y array with normally distributed random numbers
randi(x, y)      % optional parameters; generates x,y array with pseudorandom integers of uniform discrete distribution


% predefined values
pi      % value of pi to 15 significant digit
i, j    % imaginary numbers
Inf     % infinity
NaN     % Not a number, such as 0/0
ans     % stores result of last expresion that wasn't stored in a var


% Console Commands
clc    % clears user terminal
clear  % removes all variables stored int the workspace


% 2D MATRICES
var2 =  [12 34 2 23; 43 12 7 58; 61 94 3 75];
sum_row = sum(var2);        % would store sum of all rows (individually) and return as 1D matrix
sum_col = sum(var2')';      % ' inverts rows with columns; operation used to perform column addition with row add method
sum_dia = sum(diag(var2));  % adds all diagonal terms from 0,0
flip_rows = fliplr(var2);   % flips content of the rows, so value in first cell (in a row) becomes value of last cell (of that row)


% Data Managment 
save file1.mat;            % save all declared variables in file1.mat
save('file2.mat', 'var1')  % save only selected variables 
load file1.mat;            % load data from file1.mat
loat file1.mat var1;       % load only var1 from file1
whos                       % display info about all variables in the current workspace
whos(var1)                 % display info about var1 (only)
whos('-file', 'file1.mat') % display info about variables in file1